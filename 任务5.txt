①什么是session？什么是cookie？session和cookie有什么区别？什么场景适用于session？什么场景适用于cookie？

session是服务端保存上下文以识别用户信息的一种机制，跟踪用户的会话，使用sessionID识别用户，例如同时开启几个网页的用户是一个用户。在没有使用会话持久化的情况下，其生命周期从用户访问页面开始，随着用户访问结束而结束

cookie是由服务器生成发送到客户端，由客户端保存的一段信息，这个信息的寿命和用法由开发者决定



两者之间的区别：

存放地址：

session存在于服务器之间的内存中；cookie存放于客户端，浏览器关闭后保存在硬盘中

保存类型：

session可以保存多个对象；cookie只能保存有限的字符串

生命周期：

session可以在没有持久化的情况下只存在于用户访问期间；cookie则没有存放时间的限制



应用场景：

cookie安全性低，保存在硬盘中，通过黑客手段攻击手段可以大量窃取，安全性较低，适用于存放安全性较低的信息，如用户名，登录时间等；

session存在于服务器之中，安全性高，用以传递安全性高的信息，以及用以认证和授权



②拦截器、过滤器、监听器各有什么作用？

拦截器：

最近刚写过这个。在SpringMVC的servlet的文件中配置要拦截的url与拦截类。类中有三个方法，preHandle、postHandle、afterCompletion。preHandle在网页本体的控制起效前启用，可以用于验证token、权限等；postHandle、afterCompletion要preHandle返回true才执行，postHandle在控制器执行后才执行，可以用ModelAndView传递或改变服务器的信息，afterCompletion用以清理资源，没用过。

过滤器

在web.xml中配置，随着web容器的启动而初始化。可以加载实现了Filter 接口的过滤类，现在我们用过的功能是字符过滤、可以让我们使用DELETE、PUT请求方法的Hidden过滤。其实现的功能随加载的Filter实现类而定，也可以实现像登录验证、权限验证、静态资源加载等功能。


监听器

与application,session,request三个对象息息相关。在application,session,request创建、销毁、增加、删减属性时按条件执行相关功能，对应实现类的接口分别为ServletContextListener,HttpSessionListener,ServletRequestListener。我们用过的监听器有上下文监听器、log4j监听器、Tiles监听器，看了下源码，实现的都是ServletContextListener接口（Tiles在其上又加了一个接口，二重接口）。可以用来实现实时监听在线人数。

